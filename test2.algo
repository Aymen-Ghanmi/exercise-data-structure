ALGORITHM algorithm_name
VAR
   
   s1: INTEGER=[3,1,7,9]
   s2: INTEGER=[2,4,1,9,3];
   sum:=0;
   i:=0;
BEGIN
    FOR s1 FROM 0 TO 3 DO
        if number is <> from s2 THEN
        sum=sum+number s1
    END_FOR
    FOR s2 FROM 0 TO 4 DO
        if number is <> from s1 THEN
        sum=sum+number s2
    END_FOR

    
END





//****************function methode***************


FUNCTION  dot_product(v1,v2 : ARRAY_OF INTEGER, VAR dot ) : INTEGER
VAR
    i : INTEGER;
    dot :=0;
    i:=0;
BEGIN
        IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculate dot product");
        dot := NaN; // NaN : not definte number
    END_IF
    WHILE (i < v1.length ) DO
        dot := dot + v1[i]*v2[i];
    END_WHILE

END
ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
BEGIN
    // Read Size of elements of V1 
    n1 := read_size();
    // Read elements of V1
    read_array(n1,v1);
    // Read Size of elements of V2 
    n2 := read_size();
    // Read elements of V2
    read_array(n2,v2);

    dot_product(v1,v2,dot);
    IF (dot == 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END





//****************procedure methode***************





PROCEDURE dot_product(v1,v2 : ARRAY_OF INTEGER, VAR dot : INTEGER)
VAR
    i : INTEGER;
BEGIN
    dot :=0;
    i:=0;
    IF (v1.length <> v2.length) THEN
        Write("vectors with different sizes we cannot calculate dot product");
        dot := NaN; // NaN : not definte number
    END_IF
    WHILE (i < v1.length ) DO
        dot := dot + v1[i]*v2[i];
    END_WHILE
END
// 2) 
ALGORITHM orth_vectors
VAR
    v1,v2 : ARRAY_OF INTEGER [50];
    dot : INTEGER;
BEGIN
    // Read Size of elements of V1 
    n1 := read_size();
    // Read elements of V1
    read_array(n1,v1);
    // Read Size of elements of V2 
    n2 := read_size();
    // Read elements of V2
    read_array(n2,v2);

    dot_product(v1,v2,dot);
    IF (dot == 0) THEN
        Write("V1 and V2 are orthogonal");
    ELSE
        Write("V1 and V2 are not orthogonal");
    END_IF
END